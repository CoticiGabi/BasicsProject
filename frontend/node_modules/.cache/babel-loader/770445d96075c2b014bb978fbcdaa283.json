{"ast":null,"code":"var _jsxFileName = \"/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/Products/Products.jsx\";\nimport React, { Component } from \"react\";\nimport AppNav from \"../AppNav\";\nimport { Card, Form, Row, Col } from \"react-bootstrap\"; // import history from \"../history\";\n\nimport { createBrowserHistory } from \"history\";\nexport const history = createBrowserHistory({});\n\nclass Products extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      Products: [],\n      Categories: [],\n      category: \"\"\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(\"AAA\");\n      history.push(`/categories/${e.target.value}/products`);\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    console.log(id);\n    console.log(typeof Response);\n\n    if (id !== undefined) {\n      const response = await fetch(`/categories/${id}/products`);\n      const body = await response.json();\n      const responseCateroies = await fetch(\"/categories\");\n      const bodyCategories = await responseCateroies.json();\n      this.setState({\n        isLoading: false,\n        Products: body,\n        Categories: bodyCategories\n      });\n    } else {\n      const response = await fetch(\"/products\");\n      const body = await response.json();\n      const responseCateroies = await fetch(\"/categories\");\n      const bodyCategories = await responseCateroies.json();\n      this.setState({\n        isLoading: false,\n        Products: body,\n        Categories: bodyCategories\n      });\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      Products,\n      Categories\n    } = this.state;\n    let productGroup = [];\n    let allProductsGrouped = [];\n\n    for (const [index, value] of Products.entries()) {\n      productGroup.push(value);\n\n      if ((index + 1) % 3 === 0) {\n        allProductsGrouped.push(productGroup);\n        productGroup = [];\n      } else if (index + 1 === Products.length && productGroup.length !== 0) {\n        allProductsGrouped.push(productGroup);\n      }\n    } // console.log(allProductsGrouped);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"dropdown mt-4\",\n      name: \"category\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"none\",\n      selected: true,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Group by category\"), Categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, category.title))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Products\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, allProductsGrouped.map((products, rowIndex) => /*#__PURE__*/React.createElement(Row, {\n      key: rowIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, products.map(product => /*#__PURE__*/React.createElement(Col, {\n      className: \"col-xs-12 col-sm-4 mb-3\",\n      key: product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/products/\" + product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"/images/cat.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/products/\" + product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, product.title)), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, product.description)), /*#__PURE__*/React.createElement(Card.Footer, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, product.price, \"$\")))))))));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/Products/Products.jsx"],"names":["React","Component","AppNav","Card","Form","Row","Col","createBrowserHistory","history","Products","state","isLoading","Categories","category","changeHandler","e","setState","target","name","value","console","log","push","componentDidMount","id","props","match","params","Response","undefined","response","fetch","body","json","responseCateroies","bodyCategories","render","productGroup","allProductsGrouped","index","entries","length","map","title","textAlign","products","rowIndex","product","description","price"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AppNav from \"../AppNav\";\nimport { Card, Form, Row, Col } from \"react-bootstrap\";\n// import history from \"../history\";\nimport { createBrowserHistory } from \"history\";\nexport const history = createBrowserHistory({});\n\nclass Products extends Component {\n  state = {\n    isLoading: true,\n    Products: [],\n    Categories: [],\n    category: \"\",\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    console.log(id);\n    console.log(typeof Response);\n    if (id !== undefined) {\n      const response = await fetch(`/categories/${id}/products`);\n      const body = await response.json();\n      const responseCateroies = await fetch(\"/categories\");\n      const bodyCategories = await responseCateroies.json();\n      this.setState({\n        isLoading: false,\n        Products: body,\n        Categories: bodyCategories,\n      });\n    } else {\n      const response = await fetch(\"/products\");\n      const body = await response.json();\n      const responseCateroies = await fetch(\"/categories\");\n      const bodyCategories = await responseCateroies.json();\n      this.setState({\n        isLoading: false,\n        Products: body,\n        Categories: bodyCategories,\n      });\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(\"AAA\");\n    history.push(`/categories/${e.target.value}/products`);\n  };\n\n  render() {\n    const { isLoading, Products, Categories } = this.state;\n    let productGroup = [];\n    let allProductsGrouped = [];\n    for (const [index, value] of Products.entries()) {\n      productGroup.push(value);\n      if ((index + 1) % 3 === 0) {\n        allProductsGrouped.push(productGroup);\n        productGroup = [];\n      } else if (index + 1 === Products.length && productGroup.length !== 0) {\n        allProductsGrouped.push(productGroup);\n      }\n    }\n    // console.log(allProductsGrouped);\n    return (\n      <div>\n        <AppNav />\n        <select\n          className=\"dropdown mt-4\"\n          name=\"category\"\n          onChange={this.changeHandler}\n        >\n          <option value=\"none\" selected disabled>\n            Group by category\n          </option>\n          {Categories.map((category) => (\n            <option value={category.id} key={category.id}>\n              {category.title}\n            </option>\n          ))}\n        </select>\n        <div style={{ textAlign: \"center\" }} className=\"mb-4\">\n          <h1>Products</h1>\n        </div>\n        <div className=\"container\">\n          {allProductsGrouped.map((products, rowIndex) => (\n            <Row key={rowIndex}>\n              {products.map((product) => (\n                <Col className=\"col-xs-12 col-sm-4 mb-3\" key={product.id}>\n                  <Card>\n                    <a href={\"/products/\" + product.id}>\n                      <Card.Img variant=\"top\" src=\"/images/cat.jpg\" />\n                    </a>\n                    <Card.Body>\n                      <Card.Title>\n                        <a href={\"/products/\" + product.id}>{product.title}</a>\n                      </Card.Title>\n                      <Card.Text>{product.description}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer style={{ textAlign: \"center\" }}>\n                      <small className=\"text-muted\">{product.price}$</small>\n                    </Card.Footer>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          ))}\n        </div>\n        {/* {Products.map((product) => (\n          <div key={product.id}>\n            <h3>{product.title}</h3>\n          </div>\n        ))} */}\n      </div>\n    );\n  }\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}