{"ast":null,"code":"var _jsxFileName = \"/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/Products/Products.jsx\";\nimport React, { Component } from \"react\";\nimport AppNav from \"../AppNav\";\nimport { Card, Form, Row, Col } from \"react-bootstrap\";\n\nclass Products extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      Products: [],\n      Categorie: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"/products\");\n    const body = await response.json();\n    const responseCateroies = await fetch(\"/categories\");\n    const bodyCategories = await responseCateroies.json();\n    this.setState({\n      isLoading: false,\n      Products: body,\n      Categories: bodyCategories\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      Products,\n      Categories\n    } = this.state;\n    let productGroup = [];\n    let allProductsGrouped = [];\n\n    for (const [index, value] of Products.entries()) {\n      productGroup.push(value);\n\n      if ((index + 1) % 3 === 0) {\n        allProductsGrouped.push(productGroup);\n        productGroup = [];\n      } else if (index + 1 == Products.length && productGroup.length != 0) {\n        allProductsGrouped.push(productGroup);\n      }\n    }\n\n    console.log(allProductsGrouped);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"category\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Alege o optiune\"), Categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n      key: category.id,\n      value: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, category.title)))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Products\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, allProductsGrouped.map((products, rowIndex) => /*#__PURE__*/React.createElement(Row, {\n      key: rowIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, products.map(product => /*#__PURE__*/React.createElement(Col, {\n      className: \"col-xs-12 col-sm-4 mb-3\",\n      key: product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/products/\" + product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"/images/cat.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/products/\" + product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, product.title)), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }, product.description)), /*#__PURE__*/React.createElement(Card.Footer, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, product.price, \"$\")))))))));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/Products/Products.jsx"],"names":["React","Component","AppNav","Card","Form","Row","Col","Products","state","isLoading","Categorie","componentDidMount","response","fetch","body","json","responseCateroies","bodyCategories","setState","Categories","render","productGroup","allProductsGrouped","index","value","entries","push","length","console","log","changeHandler","map","category","id","title","textAlign","products","rowIndex","product","description","price"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AppNav from \"../AppNav\";\nimport { Card, Form, Row, Col } from \"react-bootstrap\";\nclass Products extends Component {\n  state = {\n    isLoading: true,\n    Products: [],\n    Categorie: [],\n  };\n\n  async componentDidMount() {\n    const response = await fetch(\"/products\");\n    const body = await response.json();\n    const responseCateroies = await fetch(\"/categories\");\n    const bodyCategories = await responseCateroies.json();\n    this.setState({\n      isLoading: false,\n      Products: body,\n      Categories: bodyCategories,\n    });\n  }\n\n  render() {\n    const { isLoading, Products, Categories } = this.state;\n    let productGroup = [];\n    let allProductsGrouped = [];\n    for (const [index, value] of Products.entries()) {\n      productGroup.push(value);\n      if ((index + 1) % 3 === 0) {\n        allProductsGrouped.push(productGroup);\n        productGroup = [];\n      } else if (index + 1 == Products.length && productGroup.length != 0) {\n        allProductsGrouped.push(productGroup);\n      }\n    }\n    console.log(allProductsGrouped);\n    return (\n      <div>\n        <AppNav />\n        <Form.Group as={Col} controlId=\"formCategory\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"category\"\n            onChange={this.changeHandler}\n          >\n            <option value=\"0\" disabled selected>\n              Alege o optiune\n            </option>\n            {/*<option value={category}>Bluze</option>\n                  <option value={category}>T-shirt</option> */}\n            {Categories.map((category) => (\n              <option key={category.id} value={category.id}>\n                {category.title}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <div style={{ textAlign: \"center\" }} className=\"mb-4\">\n          <h1>Products</h1>\n        </div>\n        <div className=\"container\">\n          {allProductsGrouped.map((products, rowIndex) => (\n            <Row key={rowIndex}>\n              {products.map((product) => (\n                <Col className=\"col-xs-12 col-sm-4 mb-3\" key={product.id}>\n                  <Card>\n                    <a href={\"/products/\" + product.id}>\n                      <Card.Img variant=\"top\" src=\"/images/cat.jpg\" />\n                    </a>\n                    <Card.Body>\n                      <Card.Title>\n                        <a href={\"/products/\" + product.id}>{product.title}</a>\n                      </Card.Title>\n                      <Card.Text>{product.description}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer style={{ textAlign: \"center\" }}>\n                      <small className=\"text-muted\">{product.price}$</small>\n                    </Card.Footer>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          ))}\n        </div>\n        {/* {Products.map((product) => (\n          <div key={product.id}>\n            <h3>{product.title}</h3>\n          </div>\n        ))} */}\n      </div>\n    );\n  }\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}