{"ast":null,"code":"var _jsxFileName = \"/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/SearchProduct.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Typeahead, FormGroup } from \"react-bootstrap\";\nimport { Control } from \"react-redux-form\";\n\nclass SearchProduct extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disabled: false,\n      dropup: false,\n      flip: false,\n      highlightOnlyResult: false,\n      minLength: 0,\n      open: undefined,\n      selectHintOnEnter: false\n    };\n\n    this._handleChange = e => {\n      const {\n        checked,\n        name\n      } = e.target;\n      const newState = {\n        [name]: checked\n      };\n\n      switch (name) {\n        case \"minLength\":\n          newState[name] = checked ? 2 : 0;\n          break;\n\n        case \"open\":\n          newState[name] = checked ? true : undefined;\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    const {\n      disabled,\n      dropup,\n      flip,\n      highlightOnlyResult,\n      minLength,\n      open,\n      selectHintOnEnter\n    } = this.state;\n    const checkboxes = [\n    /* eslint-disable max-len */\n    {\n      checked: disabled,\n      children: \"Disable the input\",\n      name: \"disabled\"\n    }, {\n      checked: dropup,\n      children: \"Dropup menu\",\n      name: \"dropup\"\n    }, {\n      checked: flip,\n      children: \"Flip the menu position when it reaches the viewport bounds\",\n      name: \"flip\"\n    }, {\n      checked: !!minLength,\n      children: \"Require minimum input before showing results (2 chars)\",\n      name: \"minLength\"\n    }, {\n      checked: selectHintOnEnter,\n      children: \"Select the hinted result by pressing enter\",\n      name: \"selectHintOnEnter\"\n    }, {\n      checked: highlightOnlyResult,\n      children: \"Highlight the only result\",\n      name: \"highlightOnlyResult\"\n    }, {\n      checked: !!open,\n      children: \"Force the menu to stay open\",\n      name: \"open\"\n    }\n    /* eslint-enable max-len */\n    ];\n    const {\n      options\n    } = [\"Alabama\", \"Arizona\"];\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typeahead, Object.assign({}, this.state, {\n      id: \"basic-behaviors-example\",\n      labelKey: \"name\",\n      options: options,\n      placeholder: \"Choose a state...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, checkboxes.map(props => /*#__PURE__*/React.createElement(Control, Object.assign({}, props, {\n      key: props.name,\n      onChange: this._handleChange,\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nexport default SearchProduct;","map":{"version":3,"sources":["/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/SearchProduct.jsx"],"names":["React","Component","Fragment","Typeahead","FormGroup","Control","SearchProduct","state","disabled","dropup","flip","highlightOnlyResult","minLength","open","undefined","selectHintOnEnter","_handleChange","e","checked","name","target","newState","setState","render","checkboxes","children","options","map","props"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Typeahead, FormGroup } from \"react-bootstrap\";\nimport { Control } from \"react-redux-form\";\n\nclass SearchProduct extends Component {\n  state = {\n    disabled: false,\n    dropup: false,\n    flip: false,\n    highlightOnlyResult: false,\n    minLength: 0,\n    open: undefined,\n    selectHintOnEnter: false,\n  };\n\n  render() {\n    const {\n      disabled,\n      dropup,\n      flip,\n      highlightOnlyResult,\n      minLength,\n      open,\n      selectHintOnEnter,\n    } = this.state;\n\n    const checkboxes = [\n      /* eslint-disable max-len */\n      { checked: disabled, children: \"Disable the input\", name: \"disabled\" },\n      { checked: dropup, children: \"Dropup menu\", name: \"dropup\" },\n      {\n        checked: flip,\n        children: \"Flip the menu position when it reaches the viewport bounds\",\n        name: \"flip\",\n      },\n      {\n        checked: !!minLength,\n        children: \"Require minimum input before showing results (2 chars)\",\n        name: \"minLength\",\n      },\n      {\n        checked: selectHintOnEnter,\n        children: \"Select the hinted result by pressing enter\",\n        name: \"selectHintOnEnter\",\n      },\n      {\n        checked: highlightOnlyResult,\n        children: \"Highlight the only result\",\n        name: \"highlightOnlyResult\",\n      },\n      {\n        checked: !!open,\n        children: \"Force the menu to stay open\",\n        name: \"open\",\n      },\n      /* eslint-enable max-len */\n    ];\n    const { options } = [\"Alabama\", \"Arizona\"];\n    return (\n      <Fragment>\n        <Typeahead\n          {...this.state}\n          id=\"basic-behaviors-example\"\n          labelKey=\"name\"\n          options={options}\n          placeholder=\"Choose a state...\"\n        />\n        <FormGroup>\n          {checkboxes.map((props) => (\n            <Control\n              {...props}\n              key={props.name}\n              onChange={this._handleChange}\n              type=\"checkbox\"\n            />\n          ))}\n        </FormGroup>\n      </Fragment>\n    );\n  }\n\n  _handleChange = (e) => {\n    const { checked, name } = e.target;\n    const newState = { [name]: checked };\n\n    switch (name) {\n      case \"minLength\":\n        newState[name] = checked ? 2 : 0;\n        break;\n      case \"open\":\n        newState[name] = checked ? true : undefined;\n        break;\n      default:\n        break;\n    }\n\n    this.setState(newState);\n  };\n}\n\nexport default SearchProduct;\n"]},"metadata":{},"sourceType":"module"}