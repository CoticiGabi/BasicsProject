{"ast":null,"code":"var _jsxFileName = \"/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/Products/Product.jsx\";\nimport React, { Component } from \"react\";\nimport AppNav from \"../AppNav\";\n\nclass ProductPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Product: {},\n      isLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    const response = await fetch(`/products/${id}`);\n    const body = await response.json();\n    this.setState({\n      Product: body,\n      isLoading: false\n    });\n  }\n\n  render() {\n    const {\n      Product,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: Product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, Product.title, \" \", Product.price, \" \", Product.stock, Product.description);\n  }\n\n}\n\nexport default ProductPage;","map":{"version":3,"sources":["/Users/Gabi/Documents/Basics-Miu/Basics/frontend/src/Products/Product.jsx"],"names":["React","Component","AppNav","ProductPage","state","Product","isLoading","componentDidMount","id","props","match","params","response","fetch","body","json","setState","render","title","price","stock","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD0B;AAAA;;AAMlC,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYL,EAAG,EAAjB,CAA5B;AACA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEX,MAAAA,OAAO,EAAES,IAAX;AAAiBR,MAAAA,SAAS,EAAE;AAA5B,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAyB,KAAKF,KAApC;;AACA,QAAIE,SAAJ,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,wBACE;AAAK,MAAA,GAAG,EAAED,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,CAACa,KADX,OACmBb,OAAO,CAACc,KAD3B,OACmCd,OAAO,CAACe,KAD3C,EAEGf,OAAO,CAACgB,WAFX,CADF;AAMD;;AAxBiC;;AA2BpC,eAAelB,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport AppNav from \"../AppNav\";\n\nclass ProductPage extends Component {\n  state = {\n    Product: {},\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const response = await fetch(`/products/${id}`);\n    const body = await response.json();\n    this.setState({ Product: body, isLoading: false });\n  }\n\n  render() {\n    const { Product, isLoading } = this.state;\n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div key={Product.id}>\n        {Product.title} {Product.price} {Product.stock}\n        {Product.description}\n      </div>\n    );\n  }\n}\n\nexport default ProductPage;\n"]},"metadata":{},"sourceType":"module"}